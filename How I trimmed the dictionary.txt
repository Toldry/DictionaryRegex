// I first started gradually making a regular expression that, when I replaced it with the first capture group (\1), it would only leave the original word and delete the definition

^([\w -]+)-?( +)(\w+\.|—\w+\.).*$

^([\w -]+)[-?(( +)(\w+\.|—\w+\.))].*$

^(\w(\w| |(-\w))+)((- )|(( +)(\w+\.|—\w+\.))).*$

^(\w(\w| |(-\w))*)((- )|(( +)(\w+\.|—\w+\.))).*$

^(\w(\w| |(-\w))*)((- )|(( +)(\w+\.|—\w+\.))|(  )).*$

^(\w(\w| |([-']\w))*)((- )|(( +)(\w+\.|—\w+\.))|(  )).*$

^(\w(\w| |([-'\.]\w))*\.?)((- )|(( +)(\w+\.|—\w+\.))|(  )).*$

^(\w(\w| |([-'\.]\w))*\.?)((- )|(( {2,})(\w+\.|—\w+\.))|(  )).*$

^(\w(\w|([- '\.]\w))*\.?)((- )|(( {2,})(\w+\.|—\w+\.))|(  )).*$

^((-?)\w(\w|([- '\.]\w))*\.?)((- )|(( {2,})(\w+\.|—\w+\.))|(  )).*$

^((-?)\w(\w|([- \/'\.]\w))*\.?)((- )|(( {2,})(\w+\.|—\w+\.))|(  )).*$

^((-?)\w(\w|([-\/'\.( (?! ))]\w))*\.?)((- )|(( {2,})(\w+\.|—\w+\.))|(  )).*$


// Then I noticed that the word and its' definition is always separated by a pair of spaces

^((\S| )+()  .*$

// But sometimes the definition also contains a pair of spaces. So I need to find a way to assure that the first capture group does NOT contain a pair of spaces
// I used a negative lookahead

^((\S| (?! ))+)  .*$


// I then proceeded to fix all the anomalies manually